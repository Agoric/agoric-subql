services:
  postgres:
    build:
      context: .
      dockerfile: ./docker/pg-Dockerfile
    ports:
      - 5432:5432
    volumes:
      - .data/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5
    profiles:
      - default
      - ci

  subquery-node:
    image: subquerynetwork/subql-node-cosmos:v4.2.1
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
    volumes:
      - ./:/app
    command:
      - ${SUB_COMMAND:-}
      - -f=/app
      - --db-schema=app
      - --workers=4
      - --batch-size=30
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://subquery-node:3000/ready']
      interval: 3s
      timeout: 5s
      retries: 10
    profiles:
      - default
      - ci

  graphql-engine:
    image: onfinality/subql-query:v2.19.0
    ports:
      - 3000:3000
    depends_on:
      postgres:
        condition: service_healthy
      subquery-node:
        condition: service_healthy
    restart: always
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
    command:
      - --name=app
      - --playground
      - --indexer=http://subquery-node:3000
    profiles:
      - default
      - ci

  a3p:
    image: ghcr.io/agoric/agoric-3-proposals:use-upgrade-17@sha256:08d50e6db60b26c452c1f495205c72bdff64fbb10044db2bd4eb4a3f8b255c83
    container_name: agd
    ports:
      - 26657:26657
      - 1317:1317
      - 9090:9090
    restart: always
    profiles:
      - ci

networks:
  default:
    driver: bridge
